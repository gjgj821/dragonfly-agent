// Code generated by protoc-gen-go.
// source: dragonfly.proto
// DO NOT EDIT!

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	dragonfly.proto

It has these top-level messages:
	Task
	Result
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TaskState int32

const (
	TaskState_WAIT      TaskState = 1
	TaskState_SUCCESS   TaskState = 2
	TaskState_FAIL      TaskState = 3
	TaskState_EXCEPTION TaskState = 4
)

var TaskState_name = map[int32]string{
	1: "WAIT",
	2: "SUCCESS",
	3: "FAIL",
	4: "EXCEPTION",
}
var TaskState_value = map[string]int32{
	"WAIT":      1,
	"SUCCESS":   2,
	"FAIL":      3,
	"EXCEPTION": 4,
}

func (x TaskState) Enum() *TaskState {
	p := new(TaskState)
	*p = x
	return p
}
func (x TaskState) String() string {
	return proto.EnumName(TaskState_name, int32(x))
}
func (x *TaskState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TaskState_value, data, "TaskState")
	if err != nil {
		return err
	}
	*x = TaskState(value)
	return nil
}
func (TaskState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Task struct {
	Id               *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Channel          *string `protobuf:"bytes,2,req,name=channel" json:"channel,omitempty"`
	Command          *string `protobuf:"bytes,3,req,name=command" json:"command,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Task) Reset()                    { *m = Task{} }
func (m *Task) String() string            { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()               {}
func (*Task) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Task) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Task) GetChannel() string {
	if m != nil && m.Channel != nil {
		return *m.Channel
	}
	return ""
}

func (m *Task) GetCommand() string {
	if m != nil && m.Command != nil {
		return *m.Command
	}
	return ""
}

type Result struct {
	Id               *string    `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	State            *TaskState `protobuf:"varint,2,req,name=state,enum=main.TaskState" json:"state,omitempty"`
	Out              *string    `protobuf:"bytes,3,req,name=out" json:"out,omitempty"`
	Err              *string    `protobuf:"bytes,4,req,name=err" json:"err,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Result) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Result) GetState() TaskState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return TaskState_WAIT
}

func (m *Result) GetOut() string {
	if m != nil && m.Out != nil {
		return *m.Out
	}
	return ""
}

func (m *Result) GetErr() string {
	if m != nil && m.Err != nil {
		return *m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*Task)(nil), "main.Task")
	proto.RegisterType((*Result)(nil), "main.Result")
	proto.RegisterEnum("main.TaskState", TaskState_name, TaskState_value)
}

var fileDescriptor0 = []byte{
	// 194 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0x29, 0x4a, 0x4c,
	0xcf, 0xcf, 0x4b, 0xcb, 0xa9, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xc9, 0x4d, 0xcc,
	0xcc, 0x53, 0x32, 0xe1, 0x62, 0x09, 0x49, 0x2c, 0xce, 0x16, 0xe2, 0xe2, 0x62, 0xca, 0x4c, 0x91,
	0x60, 0x54, 0x60, 0xd2, 0xe0, 0x14, 0xe2, 0xe7, 0x62, 0x4f, 0xce, 0x48, 0xcc, 0xcb, 0x4b, 0xcd,
	0x91, 0x60, 0x82, 0x0b, 0xe4, 0xe7, 0xe6, 0x26, 0xe6, 0xa5, 0x48, 0x30, 0x83, 0x04, 0x94, 0xfc,
	0xb8, 0xd8, 0x82, 0x52, 0x8b, 0x4b, 0x73, 0x4a, 0x50, 0xf4, 0xc9, 0x71, 0xb1, 0x16, 0x97, 0x24,
	0x96, 0xa4, 0x82, 0x75, 0xf1, 0x19, 0xf1, 0xeb, 0x81, 0x6c, 0xd0, 0x03, 0x19, 0x1f, 0x0c, 0x12,
	0x16, 0xe2, 0xe6, 0x62, 0xce, 0x2f, 0x2d, 0x81, 0x18, 0x01, 0xe2, 0xa4, 0x16, 0x15, 0x49, 0xb0,
	0x80, 0x38, 0x5a, 0xd6, 0x5c, 0x9c, 0x08, 0x65, 0x1c, 0x5c, 0x2c, 0xe1, 0x8e, 0x9e, 0x21, 0x02,
	0x8c, 0x40, 0x35, 0xec, 0xc1, 0xa1, 0xce, 0xce, 0xae, 0xc1, 0xc1, 0x02, 0x4c, 0x20, 0x61, 0x37,
	0x47, 0x4f, 0x1f, 0x01, 0x66, 0x21, 0x5e, 0x2e, 0x4e, 0xd7, 0x08, 0x67, 0xd7, 0x80, 0x10, 0x4f,
	0x7f, 0x3f, 0x01, 0x16, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7b, 0x56, 0xe5, 0x00, 0xda, 0x00,
	0x00, 0x00,
}
